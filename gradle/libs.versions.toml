[versions]
# app specific
android-appnamespace = "org.mjdev.safedialer"
android-appName = "SafeDialer"
android-compileSdk = "36"
android-minSdk = "26"
#noinspection OldTargetApi
android-targetSdk = "36"
android-versionCode = "1"
android-versionName = "1.0.0"
# libs
agp = "8.12.0-alpha09"
androidx-activity = "1.10.1"
androidx-lifecycle = "2.9.1"
composeMultiplatform = "1.8.2"
kotlin = "2.2.0"
okhttp = "5.1.0"
coil = "2.7.0"
telecom = "1.0.0"
lottie-compose = "6.6.7"
libphonenumber = "9.0.9"
androidx-annotation = "1.9.1"
androidx-core-splashscreen = "1.0.1"
qrose = "1.0.1"
haze = "0.7.0"
permissions = "4.0.0"
ktor = "3.2.1"
gson = "2.10.1"
couchbase-lite = "3.1.9-1.1.1"
logback = "1.3.11"
kodein = "7.22.0"

[libraries]
gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "agp" }
gradle-kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-base = { module = "io.coil-kt:coil", version.ref = "coil" }
telecom-core = { module = "androidx.core:core-telecom", version.ref = "telecom" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie-compose" }
libphonenumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libphonenumber" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-core-splashscreen" }
qrose = { module = "io.github.alexzhirkevich:qrose", version.ref = "qrose" }
haze-jetpack-compose = { module = "dev.chrisbanes.haze:haze-jetpack-compose", version.ref = "haze" }
permissions = { module = "com.nabinbhandari.android:permissions", version.ref = "permissions" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
couchbase-lite = { module = "dev.kotbase:couchbase-lite", version.ref = "couchbase-lite" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-di-framework-compose = { module = "org.kodein.di:kodein-di-framework-compose", version.ref = "kodein" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
