name: Android CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    outputs:
      versionName: ${{ steps.version.outputs.versionName }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install requirements
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: jekyll
          version: 1.0
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    - name: Extract version name
      id: version
      run: echo "versionName=$(grep 'android-versionName' gradle/libs.versions.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT
    - name: Build with Gradle
      run: ./gradlew build -x lint
    - name: Sign app APK
      uses: ilharp/sign-android-release@v2.0.0
      id: sign_app
      with:
        releaseDir: ./composeApp/build/outputs/apk/release
        signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
        keyAlias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        customArgs: --v1-signing-enabled,true,--v2-signing-enabled,true
        buildToolsVersion: "36.0.0"
    - name: Print signed file path
      run: echo ${{ steps.sign_app.outputs.signedFile }}
    - name: Upload build outputs (APK)
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: ${{ steps.sign_app.outputs.signedFile }}
    - name: List site artifacts
      run: ls -lR ./_site
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "composeApp/build/**/*.apk"
        tag: v${{ steps.version.outputs.versionName }}
        name: Release ${{ steps.version.outputs.versionName }}
        token: ${{ secrets.GITHUB_TOKEN }}
